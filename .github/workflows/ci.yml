name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-10.15
          - macos-11
        python-version:
          - "37"
          - "38"
          - "39"
        exclude:
          - os: macos-11
            python-version: "37"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: numbsql
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - run: nix build -L --keep-going '.#numbsql${{ matrix.python-version }}' --no-link
      - run: nix path-info -Shr '.#numbsql${{ matrix.python-version }}'
  conda:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.7.1"
          - "3.8"
          - "3.9"
        deps:
          - numba: "0.53"
            llvmlite: "0.36"
          - numba: null
            llvmlite: null
        include:
          - os: macos-10.15
            python-version: "3.7.1"
          - os: windows-latest
            python-version: "3.7.5"
        exclude:
          # macos-11 isn't supported on 3.7.x
          - os: macos-latest
            python-version: "3.7.1"
          # windows + 3.7.1 has memory access violations, likely due to an
          # incompatible sqlite binary + python libsqlite library version
          #
          # these are the kinds of errors that will keep you up at night
          - os: windows-latest
            python-version: "3.7.1"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip3 install poetry2conda poetry

      - run: poetry add --lock "numba@${{ matrix.deps.numba }}" "llvmlite@${{ matrix.deps.llvmlite }}"
        if: ${{ matrix.deps.numba != null && matrix.deps.llvmlite != null }}

      - run: poetry2conda --dev pyproject.toml - | tee environment.yaml

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          miniforge-variant: Mambaforge
          miniforge-version: latest
          channel-priority: strict
          activate-environment: numbsql
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yaml

      - run: pip install .
      - run: pytest --numprocesses auto
  release:
    runs-on: ubuntu-latest
    needs:
      - nix
      - conda
    concurrency: release
    steps:
      - uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - run: git config --global user.name "github-actions"
      - run: git config --global user.email "github-actions@github.com"

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - run: pip install poetry python-semantic-release

      - run: semantic-release publish --verbosity=DEBUG
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

      - run: semantic-release publish --noop --verbosity=DEBUG
        if: ${{ github.event_name == 'pull_request' }}
