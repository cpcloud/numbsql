on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

name: CI

jobs:
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    runs-on: ${{ matrix.os }}
    concurrency:
      group: nix-${{ matrix.os }}-${{ matrix.python-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v14

      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: numbsql
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: Build package and run tests
        run: nix build --keep-going -f . -L --argstr python ${{ matrix.python-version }}
  conda:
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry2conda
        run: pip3 install poetry2conda

      - name: Generate conda environment file
        run: poetry2conda --dev pyproject.toml - | tee environment.yaml

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          miniforge-variant: Mambaforge
          miniforge-version: latest
          channel-priority: strict
          activate-environment: numbsql
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yaml

      - name: Install the package locally
        run: pip install .

      - name: Run tests
        run: pytest --verbose --benchmark-disable --numprocesses auto --durations 10
