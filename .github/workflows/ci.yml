on:
  push:
    branches:
      - master

name: Continuous Integration

jobs:
  linux_macos:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        # os: [macos-latest, ubuntu-latest]
        python_version: ["3.9"]
        # python_version: ["3.7", "3.8", "3.9"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v12

      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: slumba
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community

      - name: Build package and run tests
        run: nix build -L --argstr python python${{ matrix.python_version }}

  windows:
    strategy:
      matrix:
        # python_version: ["3.7", "3.8", "3.9"]
        python_version: ["3.9"]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python on windows
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64

      - name: Install llvm # numba needs llvm 10
        run: choco install llvm --version 10.0.0

      - name: Install sqlite
        run: choco install sqlite

      - name: Install poetry
        run: pip install poetry

      - name: Install package into poetry environment
        run: poetry install

      - name: Run tests
        run: poetry run pytest --benchmark-disable

  release:
    needs: [linux_macos, windows]
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Python semantic release
        uses: relekang/python-semantic-release@v7.16.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # pypi_token: ${{ secrets.PYPI_TOKEN }}
