on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Continuous Integration

jobs:
  nix:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v12

      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: slumba
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,stupidb

      - name: Build package and run tests
        run: nix build -L --argstr python python${{ matrix.python-version }}
  conda:
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          show-channel-urls: true
          activate-environment: slumba

      - name: Install sqlite and poetry
        run: conda install -n slumba -y sqlite poetry

      - name: Install dependencies
        run: |
          conda activate slumba
          poetry install

      - name: Run tests
        run: |
          conda activate slumba
          poetry run pytest --benchmark-disable --numprocesses=2
  release:
    needs:
      - nix
      - conda
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Configure git for semantic release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Install poetry
        run: pip install poetry

      - name: Install semantic release
        run: pip install python-semantic-release

      - name: Semantic release
        if: ${{ github.event_name != 'pull_request' }}
        run: semantic-release publish --verbosity=DEBUG
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

      - name: Semantic release
        if: ${{ github.event_name == 'pull_request' }}
        run: semantic-release publish --noop --verbosity=DEBUG
